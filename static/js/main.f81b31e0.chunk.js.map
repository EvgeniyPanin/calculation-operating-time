{"version":3,"sources":["components/Container/Container.module.css","components/Container/index.jsx","constants/facilities.js","utils/formattedData.js","utils/sortFacilities.js","styles.js","constants/config.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","Paper","elevation","className","style","container","facilities","name","date","id","formattedDate","data","Date","year","getFullYear","month","getMonth","length","day","getDate","sortFacilities","a","b","useStyles","makeStyles","theme","app","display","justifyContent","alignItems","height","select","width","selectContainer","marginLeft","marginTop","marginBottom","fontSize","result","margin","contentContainer","flexDirection","switch_container","config","App","classes","React","useState","currentFacility","setCurrentFacility","isFromDate","setIsFromDate","setHours","selectedDate","setSelectedDate","manualDate","setManualDate","Box","component","marginRight","Switch","checked","onChange","prev","color","inputProps","utils","DateFnsUtils","autoOk","disableToolbar","variant","format","label","value","newDate","KeyboardButtonProps","maxDate","minDate","FormControl","InputLabel","Select","evt","find","facility","target","sort","map","MenuItem","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f81b31e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1mCz4\"};","import React from \"react\";\r\nimport style from \"./Container.module.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <Paper elevation={3} className={style.container}>{children}</Paper>;\r\n};\r\n\r\nexport default Container;\r\n","export const facilities = [\r\n  { name: \"Гранит\", date: \"2019-06-23T00:00\", id: \"1\" },\r\n  { name: \"Альфа\", date: \"2019-06-24T00:00\", id: \"2\" },\r\n  { name: \"Планета\", date: \"2019-06-24T00:00\", id: \"3\" },\r\n  { name: \"Метроном\", date: \"2019-06-24T00:00\", id: \"4\" },\r\n];\r\n","export const formattedDate = (data) => {\r\n    const date = new Date(data);\r\n    const year = date.getFullYear();\r\n    const month = ((date.getMonth() + 1 + '').length === 1) ? '0' + ((date.getMonth() + 1)) : (date.getMonth() + 1);\r\n    const day = date.getDate().length === 1 ? '0' + date.getDate() : date.getDate();\r\n    return `${day}.${month}.${year}`\r\n  }","export const sortFacilities = (a, b) => {\r\n    if (a.name < b.name) {\r\n      return -1;\r\n    } else if (a.name > b.name) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  app: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  select: {\r\n    width: \"50%\",\r\n  },\r\n  selectContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  date: {\r\n    marginLeft: \"3%\",\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    fontSize: 18,\r\n  },\r\n  result: {\r\n    fontSize: 18,\r\n    margin: 0,\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  switch_container: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n","export const config = {\r\n    selectTitle: 'Выберите средство',\r\n    dateCommissioning: 'Начало отсчета:',\r\n    dateSelectorTitle: 'Выберите дату для подсчета наработки',\r\n    resultText: ['Наработка на выбранную дату:', ' ч.'],\r\n    fromDate: 'Считать от даты',\r\n    fromDateTitle: 'Считать c',\r\n}","import React from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Container from \"./components/Container\";\r\nimport { facilities } from \"./constants/facilities\";\r\nimport { formattedDate } from \"./utils/formattedData\";\r\nimport { sortFacilities } from \"./utils/sortFacilities\";\r\nimport { useStyles } from \"./styles\";\r\nimport { config } from \"./constants/config\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  const [currentFacility, setCurrentFacility] = React.useState({});\r\n  const [isFromDate, setIsFromDate] = React.useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date().setHours(0, 0, 0, 0)\r\n  );\r\n  const [manualDate, setManualDate] = React.useState(\r\n    new Date().setHours(0, 0, 0, 0)\r\n  );\r\n\r\n  const result = isFromDate\r\n    ? (selectedDate - manualDate) / 1000 / 60 / 60\r\n    : (selectedDate - new Date(currentFacility.date)) / 1000 / 60 / 60;\r\n\r\n  const handleDateChange = (date) => {\r\n    const newDate = date.setHours(0, 0, 0, 0);\r\n    if (date) {\r\n      if (newDate < manualDate) {\r\n        setManualDate(newDate);\r\n      }\r\n      setSelectedDate(newDate);\r\n    }\r\n  };\r\n\r\n  const handleManualDateChange = (date) => {\r\n    const newDate = date.setHours(0, 0, 0, 0);\r\n    if (date) {\r\n      if (newDate > selectedDate) {\r\n        setSelectedDate(newDate);\r\n      }\r\n      setManualDate(newDate);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      <Container>\r\n        <div className={classes.switch_container}>\r\n          <Box component=\"span\" style={{ marginRight: \"10px\" }}>\r\n            {config.fromDate}\r\n          </Box>\r\n          <Switch\r\n            checked={isFromDate}\r\n            onChange={() => {\r\n              setIsFromDate((prev) => {\r\n                if (!prev) {\r\n                  setManualDate(selectedDate);\r\n                }\r\n                return !prev\r\n              });\r\n            }}\r\n            color=\"primary\"\r\n            name=\"checkedB\"\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n        </div>\r\n        <Box>\r\n          <div className={classes.selectContainer}>\r\n            {isFromDate && (\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  style={{ width: \"50%\" }}\r\n                  autoOk\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd.MM.yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label={config.fromDateTitle}\r\n                  value={manualDate}\r\n                  onChange={handleManualDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                  maxDate={new Date().setHours(0, 0, 0, 0)}\r\n                  minDate={new Date('2019-06-01T00:00')}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            )}\r\n            {!isFromDate && (\r\n              <FormControl variant=\"outlined\" className={classes.select}>\r\n                <InputLabel>{config.selectTitle}</InputLabel>\r\n                <Select\r\n                  value={currentFacility.id}\r\n                  onChange={(evt) => {\r\n                    setCurrentFacility(\r\n                      facilities.find(\r\n                        (facility) => facility.id === evt.target.value\r\n                      )\r\n                    );\r\n                  }}\r\n                  label={config.selectTitle}\r\n                >\r\n                  {facilities.sort(sortFacilities).map((facility) => {\r\n                    return (\r\n                      <MenuItem key={facility.id} value={facility.id}>\r\n                        {facility.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n            {!isFromDate && (\r\n              <Box component=\"p\" className={classes.date}>{`${\r\n                config.dateCommissioning\r\n              } ${\r\n                currentFacility.date ? formattedDate(currentFacility.date) : \"\"\r\n              }`}</Box>\r\n            )}\r\n          </div>\r\n        </Box>\r\n        <div className={classes.contentContainer}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              style={{ width: \"100%\" }}\r\n              autoOk\r\n              disableToolbar\r\n              variant=\"inline\"\r\n              format=\"dd.MM.yyyy\"\r\n              margin=\"normal\"\r\n              id=\"date-picker-inline\"\r\n              label={config.dateSelectorTitle}\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n              maxDate={new Date().setHours(0, 0, 0, 0)}\r\n              minDate={new Date('2019-06-01T00:00')}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          <p className={classes.result}>{`${config.resultText[0]} ${\r\n            !isNaN(result) ? result + config.resultText[1] : \"\"\r\n          }`}</p>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}